@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using Microsoft.JSInterop;
@using SmartMeterApp.Models
@using SmartMeterApp.Services
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject ToastService ToastService

<div class="login-register-container">
    @if(userAction == UserActions.Login)
    {
        <h3>Sign In to Smart Meter Gateway</h3>

        <EditForm Model="@loginModel" OnValidSubmit="LoginDebug">
            <DataAnnotationsValidator />

            <div class="form-group login-register-form-group">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group login-register-form-group">
                <label for="password">Passwort:</label>
                <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button type="submit" disabled="@isVerifying" class="btn-primary btn btn-block login-register-btn">
                @if (isVerifying)
                {
                    <div class="spinner-border" role="status" style="height: 1rem; width: 1rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
                else
                {
                    <span>Login</span>
                } 
            </button>
        </EditForm>

        <div style="margin-top: 15px;">
            <p>
                Don’t have an account.
                <div class="login-register-user-action" @onclick="@(() => ToggleUserActionState())">Register now</div>
            </p>
        </div>
    }
    else
    {
        <h3>Register for Smart Meter Gateway</h3>

        <EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmitRegister">
            <DataAnnotationsValidator />

            <div class="form-group login-register-form-group">
                <label for="firstname">Firstname:</label>
                <InputText id="firstname" @bind-Value="registerModel.Firstname" class="form-control" />
                <ValidationMessage For="@(() => registerModel.Firstname)" />
            </div>

            <div class="form-group login-register-form-group">
                <label for="lastname">Lastname:</label>
                <InputText id="lastname" @bind-Value="registerModel.Lastname" class="form-control" />
                <ValidationMessage For="@(() => registerModel.Lastname)" />
            </div>

            <div class="form-group login-register-form-group">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>

            <div class="form-group login-register-form-group">
                <label for="password">Password:</label>
                <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>

            <div class="form-group login-register-form-group">
                <label for="password2">Repeat Password:</label>
                <InputText id="password2" @bind-Value="repeatedPassword" type="password" class="form-control" />

                @if (showRepeatedPasswordError)
                {
                    <div class="validation-message">Repeated Password is not correct.</div>
                }
            </div>

            <button type="submit" disabled="@isVerifying" class="btn-primary btn btn-block login-register-btn">
                @if (isVerifying)
                {
                    <div class="spinner-border m-5" role="status" style="height: 1rem; width: 1rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
                else
                {
                    <span>Register</span>
                }
            </button>

            <div style="margin-top: 15px;">
                <p>
                    Already have an account?
                    <div class="login-register-user-action" @onclick="@(() => ToggleUserActionState())">Login now</div>
                </p>
            </div>
        </EditForm>
    }

    <Modal 
        TModel="VerifyOtpModel"
        SubmitButtonText="Verify OTP"
        Title="OTP Verification"
        Text="Please enter the OTP sent to your email."
        Model="@verifyOtpModel"        
        IsVerifying="@isVerifying"           
        OnValidSubmit="HandleOTPVerification">
        <Content>
            <div class="form-group">
                <InputText id="otp" @bind-Value="@verifyOtpModel.Otp" class="form-control" placeholder="Enter OTP" />
                <ValidationMessage For="@(() => verifyOtpModel.Otp)" />
            </div>
        </Content>
    </Modal>
    
    <button @onclick="@(() => ToastService.AddToast())">Add Toast</button>
</div>