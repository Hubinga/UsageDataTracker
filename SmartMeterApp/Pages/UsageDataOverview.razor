@page "/Overview"
@using SmartMeterApp.Components
@using SmartMeterApp.Models
@using Microsoft.JSInterop;
@inject IJSRuntime JS


<!--Logout Button-->
<div style="position: absolute; top:10px; left: 10px;">
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-box-arrow-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0z" />
        <path fill-rule="evenodd" d="M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708z" />
    </svg>
</div>
<div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
    <ChartComponent UsageDataOnclick="ShowUsageDataEditModal"></ChartComponent>
</div>

<Modal TModel="UsageDataModel"
       SubmitButtonText = "Update"
       Title="@modalText"
       Text = "Enter the new value."
       Model="@usageDataModel"
       IsVerifying="@isVerifying"
       OnValidSubmit="HandleUpdateUsageData">
    <Content>
        <div class="form-group">
            <InputNumber id="value" @bind-Value="@usageDataModel.Value" class="form-control" placeholder="Enter OTP" />
            <ValidationMessage For="@(() => usageDataModel.Value)" />
        </div>
    </Content>
</Modal>
    
@code {
    private bool isVerifying = false;
    private UsageDataModel usageDataModel = new();
    private string modalText;

    private void HandleUpdateUsageData()
    {

    }

    private async Task ShowUsageDataEditModal(UsageDataModel usageData)
    {
        usageDataModel = usageData;
        modalText = $"Edit Usage Data for {usageDataModel.Month} {usageDataModel.Year}";
        await JS.InvokeVoidAsync("showModal", "modal");
    }
}
