@page "/overview"
@using SmartMeterApp.Components
@using SmartMeterApp.Models
@using Microsoft.JSInterop;
@using System.Net.Http.Headers
@using System.Text
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using SmartMeterApp.Services
@using System.Net
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@using SmartMeterApp.Utility
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject ToastService ToastService
@inject IEventAggregator EventAggregator

<!--Logout Button-->
<LogoutComponent></LogoutComponent>

<div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
    @if(!string.IsNullOrEmpty(loggedInUserId) && usageData != null)
    {
        <!--Usage Data Graph-->
        <ChartComponent CurrentUserId="@loggedInUserId"
                        UsageDataOnclick="ShowUsageDataEditModal"
                        UsageData="usageData">
        </ChartComponent>
    }
</div>

<!--Dialog to enter usage data-->
<Modal TModel="UsageDataModel"
       SubmitButtonText = "Update"
       Title="@modalText"
       Text = "Enter the new value."
       Model="@usageDataModel"
       IsVerifying="@isVerifying"
       OnValidSubmit="HandleUpdateUsageData">
    <Content>
        <div class="form-group">
            <InputNumber id="value" @bind-Value="@usageDataModel.Value" class="form-control" placeholder="Enter OTP" />
            <ValidationMessage For="@(() => usageDataModel.Value)" />
        </div>
    </Content>
</Modal>